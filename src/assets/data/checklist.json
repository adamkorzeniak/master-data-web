[
	{
		"group": "Porady",
		"items": [
			{
				"title": "Test Driven Development",
				"description": "Stosuj podejście TDD"
			}
		]
	},
	{
		"group": "Metodyka",
		"items": [
			{
				"title": "Brak długu",
				"description": "Dług można zaakceptować jeśli mamy konkretny plan w niedalekiej przyszłości na spłatę"
			},
			{
				"title": "Refaktoryzacja kodu legacy",
				"description": "Poprawiaj kod legacy bez obawy, że ingerujesz w cudzy znajomy bałagan"
			},
			{
				"title": "Szukanie w Google",
				"description": "Sprawdź czy w google nie znajdziesz lepszego rozwiązania problemu"
			}
		]
	},
	{
		"group": "Narzędzia",
		"items": [
			{
				"title": "SonarQube - analiza statyczna kodu",
				"description": "Analiza statyczna kodu i rozważenie które z sugestii należy wykorzystać"
			}
		]
	},
	{
		"group": "Analiza Biznesowa",
		"items": [
			{
				"title": "Weryfikacja założeń",
				"description": "Wszystkie założenia podczas próby zrozumienia problemu i implementacji należy zanotować, zweryfikować i udokumentować"
			}
		]
	},
	{
		"group": "Testy",
		"items": [
			{
				"title": "Jeden test weryfikuje jedną koncepcję",
				"description": "Nie testuj kilku przypadków w jednym teście, Nieudany test powinien jednoznacznie pokazywać co poszło nie tak"
			},
			{
				"title": "Kod testowy jest dobrej jakości",
				"description": "Kod testowy powinien spełniać te same standardy jakości jak kod właściwy"
			},
			{
				"title": "Testy - Odpowiednie pokrycie",
				"description": "Kod powinien mieć odpowiednie pokrycie testami np. 70-80%"
			},
			{
				"title": "Testy testują warunki graniczne",
				"description": "Weryfikuj, że kod zachowa się w sposób oczekiwany podczas warunków granicznych (obojętnie czy się ma wysypać czy nie)"
			},
			{
				"title": "Testy testują kod",
				"description": "Testy nie służą jedynie zwiększeniu pokryciu, weryfikują nieoczekiwane zachowania i pokazują błędy"
			}
		]
	},
	{
		"group": "Dokumentacja",
		"items": [
			{
				"title": "Komentarz - tylko, gdy tłumaczą potencjalnie niezrozumiałe rozwiązanie",
				"description": "Nie używaj komentarzy, gdy potencjalnie niezrozumiałe rozwiązanie da się wytłumaczyć odpowiednim nazwenictwame zmiennych i wydzielaniem metod"
			},
			{
				"title": "Udokumentowane jest całe Web API",
				"description": "Wszystkie endpointy udokumentowane wraz z opisami pól, które nie są oczywiste"
			}
		]
	},
	{
		"group": "Ogólne",
		"items": [
			{
				"title": "Kod czyta się dobrze",
				"description": "Kod czyta się jak dobrze napisaną prozę, nawet przez osoby ze znikomą wiedzą techniczną"
			},
			{
				"title": "Unikaj indeksów w pętlach",
				"description": null
			},
			{
				"title": "if/else/else switch/case zastąp polimorfizmem",
				"description": null
			},
			{
				"title": "Warunki wyodrębnij jako funkcję, zmienną lub predykat",
				"description": null
			},
			{
				"title": "Brak nieużwanego/zakomentowanego kodu",
				"description": null
			},
			{
				"title": "Nie duplikuj kodu - wydziel abstrakcję",
				"description": null
			},
			{
				"title": "Jeśli kod może być reużyty wydziel go do metody",
				"description": null
			}
		]
	},
	{
		"group": "Logowanie",
		"items": [
			{
				"title": "Log zawiera kontekst wywołania",
				"description": "Najlepiej correlationId zainicjowane i wylowowane na początku wraz z kontekstem"
			},
			{
				"title": "Logowanie wejścia/wyjścia API aplikacji",
				"description": null
			},
			{
				"title": "Logowanie wejścia/wyjścia do zewnętrznych API",
				"description": null
			},
			{
				"title": "Logowania istotnych kroków do debugowania",
				"description": null
			},
			{
				"title": "Logowanie błędów",
				"description": null
			}
		]
	},
	{
		"group": "Obsługa wyjątków",
		"items": [
			{
				"title": "Preferuj standardowe wyjątki",
				"description": "Preferuj standardowe wyjątki jeśli nie potrzebujesz niestandardowej obsługi lub funkcjonalności"
			},
			{
				"title": "Stacktrace nie jest logowany",
				"description": "Zbuduj wyjątek i go wyloguj"
			},
			{
				"title": "Try zawiera tylko kod mogący rzucić oczekiwanym wyjątkiem",
				"description": null
			},
			{
				"title": "Łapanie jak najwęższych wyjątków",
				"description": "Nie rób catch Exception"
			},
			{
				"title": "Rozważ łapanie wyjątku i rzucenie ponownie z dodaniem kontekstu",
				"description": null
			},
			{
				"title": "Zbuduj odpowiedź odnośnie błędu w Rest Api",
				"description": "Uwzględnij id wywołania, status, kod błędu, szczegółową informację pomijając szczegóły implementacji"
			}
		]
	},
	{
		"group": "Nazewnictwo",
		"items": [
			{
				"title": "Nazwy są jednoznaczne",
				"description": "Nie ma potrzeby się zastanawiać co oznacza dana nazwa. Komentarz byłby niepotrzebny"
			},
			{
				"title": "Nazwy są jednoznaczne",
				"description": "Nie ma potrzeby się zastanawiać co oznacza dana nazwa. Komentarz byłby niepotrzebny"
			},
			{
				"title": "Brak literówek",
				"description": null
			},
			{
				"title": "Nazwy zawierają jednostki",
				"description": "Jeśli nie wiadomo w jakiej jednostce może być zmienna, należy jednostkę zawrzeć w nazwie zmiennej"
			},
			{
				"title": "Nazwy opisują abstrakcję",
				"description": "Nazwy opisują abstrakcję a nie implementację, przykładowo isElligibleForBonus a nie isMaleSeniorDeveloperWithSoftSkills"
			},
			{
				"title": "Nazwy używają pojęć z domeny biznesowej",
				"description": null
			},
			{
				"title": "Brak negatywnych nazw",
				"description": "Nie używaj nazw z notXXX"
			}
		]
	},
	{
		"group": "Zmienne",
		"items": [
			{
				"title": "Zmienne - jak najmniejszy scope",
				"description": "Deklaruj zmienne jak najbliżej miejsca użycia i postaraj się, żeby znikły jak najszybciej"
			},
			{
				"title": "Stałe wartości deklaruj jako final",
				"description": null
			},
			{
				"title": "Wyliczeniowe wartości deklaruj jako enumy",
				"description": null
			},
			{
				"title": "Nie używaj magicznych wartości",
				"description": "Np. -1 oznacza brak limitu, a jeśli już zdefiniuj jako stałą"
			}
		]
	},
	{
		"group": "Metoda",
		"items": [
			{
				"title": "Metoda - jak najmniej argumentów",
				"description": "Max 2 ew. 3"
			},
			{
				"title": "Metoda - nie używaj argumentów znacznikowych",
				"description": "np. boolean albo enum (również String, int jeśli działają jako enum)"
			},
			{
				"title": "Metoda - nie zwracaj i nie akceptuj nulli",
				"description": "W przeciwnym razie udokumentuj to"
			},
			{
				"title": "Hermatyzacja warunków granicznych",
				"description": null
			},
			{
				"title": "Metoda nie dłuższa niż 20 wierszy",
				"description": null
			},
			{
				"title": "Metoda - trudno wydzielić z tej metody mniejsze",
				"description": null
			},
			{
				"title": "Metoda - operacje na jednym poziomie abstrakcji",
				"description": null
			},
			{
				"title": "Metoda - nie więcej niż 2 wcięcia",
				"description": null
			},
			{
				"title": "Metoda - brak ukrytych efektów",
				"description": "W przeciwnym razie uwzględnij efekt w nazwie"
			},
			{
				"title": "Opisz przypadki graniczne dla argumentów",
				"description": null
			},
			{
				"title": "Opisz wymagania co do argumentów",
				"description": "Jeśli są i są nietypowe"
			}
		]
	},
	{
		"group": "Klasy",
		"items": [
			{
				"title": "Importy z gwiazdką, jeśli jest kilka z pakietu",
				"description": null
			},
			{
				"title": "Odpowiednia kolejność elementów",
				"description": "Stałe publiczne, stałe prywatne, zmienne prywatne, metody publiczne, metody prywatne w kolejności wywoływania (depth first)"
			},
			{
				"title": "Małe klasy",
				"description": "Nie więcej niż 200, ew. 500 linii logiki"
			},
			{
				"title": "Klasa ma jedną odpowiedzialność",
				"description": "Metody powiązane z klasą brzmią rozsądnie, klasa nie jest workiem na metody"
			}
		]
	},
	{
		"group": "Struktury",
		"items": [
			{
				"title": "Niskopoziomowe struktury danych obuduj abstrakcją",
				"description": null
			},
			{
				"title": "Grupuj kilka zmiennych powiązanych w klasy",
				"description": null
			},
			{
				"title": "Używaj odpowiednich struktur danych",
				"description": "Zastanów się czy używasz przemyślanych struktur a nie pierwszych lepszych"
			}
		]
	},
	{
		"group": "Design",
		"items": [
			{
				"title": "Każda warstwa (metoda, klasa, pakiet) ma jedną odpowiedzialność",
				"description": null
			},
			{
				"title": "Łatwo rozszerzyć funkcjonalność o nowe wymagania",
				"description": null
			},
			{
				"title": "Udostępniaj abstrakcję a nie szczegóły implementacji",
				"description": null
			}
		]
	},
	{
		"group": "Poprawność",
		"items": [
			{
				"title": "Używaj assercji",
				"description": "Podczas dewelopmentu i debugingu do walidacji założeń"
			},
			{
				"title": "Nie waliduj nulli",
				"description": "Jeśli null nie powinien wystąpić nie waliduj go, pozwól na NullPointer"
			},
			{
				"title": "Przeanalizuj poprawność pod kątem warunków granicznych",
				"description": null
			}
		]
	},
	{
		"group": "Wydajność",
		"items": [
			{
				"title": "Wydajność przetestowana",
				"description": "Przetestuj wydajność pod kątem bottlenecków za pomocą System.out.print"
			}
		]
	},
	{
		"group": "Środowisko",
		"items": [
			{
				"title": "Umieść konfigurację poza kodem",
				"description": null
			},
			{
				"title": "Odpalanie testów jest jedną prostą metodą",
				"description": null
			},
			{
				"title": "Budowanie jest jedną prostą metodą",
				"description": null
			}
		]
	}
]